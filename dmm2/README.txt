Dita Maturity Model 2 uses dita maps to abstract cross-referencing and reuse of documents. Still using dita topics

Notes on the structure of docs:

- The Role of Ditamaps
I've been struggling with nailing down the place of a ditamap in the kb structure. Up until this moment I've been thinking that each document should have one ditamap for each interface it is delivered in, but while reading http://dita.xml.org/improving-relationships-relationship-tables I was again reminded that the intent of ditamaps was for there to be one ditamap for each finished deliverable, e.g., product manual or help system. This would mean for us that each kb interface, (e.g., kb.iu.edu, uits.iu.edu) or domain class, or virtual kb, would have a single ditamap representing the structure of the relationship among all the documents available in that interface. That would make for a large reltable in the ditamap. I think the approach explained in that article makes more sense than the default of having reciprocal links between cells in a row: use multiple rows with linking="sourceonly" on the first, source topic, column and linking="targetonly" on the other three target columns. Then you are defining a greater number of one-way links using more rows instead of a fewer number of two-way links, allowing you to use the first column as an index. See the two diagrams on that page with two-headed arrows in the first 3-column example and the unidirectional arrows in the second 4-column example.

- Representing Hotitems, Refs, and Refbys
* the linking relationships of docs (i.e., hotitems, refs, and refbys) are expressed in the topic maps (e.g., axvp.ditamap and atau.ditamap). Note that each table consists of only one row. I'm not sure what the purpose or effect of multiple rows in a table is on transformed docs. The OT seems to only generate "Related information" links using the first row. I'm trying using the <topicgroup> element to group together similar links; a topicgroup for refs, a topicgroup for refbys, a topicgroup for hotitems. I'm not sure what benefit we'll get from nesting them in the groups but I feel better about the structure. It's more semantic to put similar elements inside an element than to just give them the same attribute value (setting props for each individual topicref). I still use the props attribute to identify the different <topicgroups> though.
  ** I represent a Ref as a topicref with a linking="sourceonly" attribute so that the link only goes from the linked refby to the receiving doc. E.g., in atau.ditamap, the <topicref> to axvp. 
  ** A ref is represented as a <topicref> with a linking="targetonly" attribute. E.g., axvp.ditamap expresses the other side of the linking relationship between atau and axvp with a <topicref href="atau.dita" linking="targetonly"/>.
  ** Hotitems use the linking="targetonly" attribute to express the one-to-many nature of hotitem references; they're glossary terms so you don't normally want to see all the documents that they appear in--that would be an index. 