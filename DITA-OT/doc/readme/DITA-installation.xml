<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2010, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<?Pub Sty _display FontColor="red"?>
<task id="installation" xml:lang="en-us">
<title>Installing the DITA Toolkit</title>
<titlealts>
<navtitle>Installation</navtitle>
<searchtitle>Installing the DITA Toolkit</searchtitle>
</titlealts>
<shortdesc>This topic explains how to install the DITA Toolkit processing
     environment.</shortdesc>
<taskbody>
<prereq><b>Prerequisite for installation:</b><p>The recommended use
of the DITA Toolkit components is inside of the          Java environment
because its <xref
href="DITA-usingtransforms.xml#ditausingxform/preprocess">pre-process
         architecture</xref> needs Java and Java-based tools. Therefore,
before          installing the DITA Toolkit processing environment,
ensure that you          have installed the following prerequisite
tools :<note>See <xref href="DITA-tested.xml">Tested platforms and
tools</xref> for detailed          information about versions of these
tools that have been successfully          tested with the current
toolkit release.</note></p><?Pub Caret -2?>       <dl><dlentry
id="Prereq">
<dt id="jdk">Java runtime or development environment</dt>
<dd>Provides the basic environment for most tools used in this   
          toolkit. <p>You can download and install the Java Development
Kit              (JDK) 1.5 (available on<xref format="html"
href="http://java.sun.com/j2se/index.jsp" scope="external"></xref>)
             into a directory of your choice.</p></dd>
</dlentry><dlentry id="XSLT">
<dt id="xslt">XSLT 1.0 compliant transformation engine</dt>
<dd>Provides the main transformation services via the advanced XSLT
             processor Saxon 6.5 (or greater) or Xalan-J 2.6 (or greater)
in the toolkit.<p>You can download and extract Saxon (available at <xref
format="html" href="http://saxon.sourceforge.net/" scope="external"></xref>)
or the Xalan-J (available at <xref format="html"
href="http://xml.apache.org/xalan-j/downloads.html" scope="external"></xref>)
into a directory of your choice.</p></dd>
</dlentry><dlentry id="antbuild">
<dt>Ant 1.7.1 build tool</dt>
<dd>Provides the standard setup and sequencing of processing     
        steps.</dd>
<dd>See <xref href="DITA-setupant.xml#setupant"></xref> for more 
            information.</dd>
</dlentry></dl>     </prereq>
<context>       <p>         <b>The following steps guide you to set
up the DITA Toolkit processing            environment.</b>       </p> 
   </context>
<steps>
<step><cmd>Download the DITA Toolkit package file from <xref
format="html" href="http://sourceforge.net/projects/dita-ot"
scope="external">SourceForge</xref> .</cmd><info>           <note
rev="v1r1">             <ul>
<li>It is recommended to download the latest version of the DITA 
                Toolkit for stable usage.</li>
<li>If you use DITA Open Toolkit full distribution, click <xref
href="#Fullsetup">here</xref> to continue.</li>
<li>If you use <b>Linux</b>, click <xref href="#Linuxsetup">here</xref> to
continue the setting up                  process. </li>
</ul>           </note>         </info></step>
<step><cmd>Extract the package file into a directory of your choice. </cmd>
<stepxmp>           <p>For example: <codeph>c:\pkg\DITA-OT1.0</codeph></p> 
       </stepxmp></step>
<step><cmd>Set up your environment variable<codeph> JAVA_HOME</codeph> to
           your installation directory for JDK or JRE. </cmd><stepxmp> 
         <p>For example: <codeblock>set JAVA_HOME=&lt;JDK_dir> </codeblock></p> 
       </stepxmp></step>
<step rev="v1r1"><cmd>Set up the <b>XSLT</b> processor.</cmd>
<choicetable expanse="textline" frame="topbot">
<chrow><choption>If you use the Saxon,</choption><chdesc>        
      <ul>
<li>Set up CLASSPATH to include the <i>saxon.jar</i> file.       
            <p><codeph>set CLASSPATH=%CLASSPATH%;                
   &lt;saxon_dir>\saxon.jar</codeph></p></li>
<li>Set up ANT_OPTS.<p><codeph>set ANT_OPTS=%ANT_OPTS% -Djavax.xml.transform.TransformerFactory=com.icl.saxon.TransformerFactoryImpl</codeph></p><note
type="attention">if you do not use Saxon, please remove the      
             <i>saxon.jar</i> file and ANT_OPTS from the environment
                   variable.</note></li>
</ul>               <codeph></codeph>             </chdesc></chrow>
<chrow><choption>If you use the Xalan,</choption><chdesc>        
      <ul>
<li>Set up CLASSPATH to include the <i>xalan.jar</i> file and    
               the <i> xercesImpl.jar</i> file. <codeblock>set CLASSPATH=%CLASSPATH%;&lt;xalan_dir&gt;\bin</codeblock><note
type="attention">if you don't use the Xalan, please remove<i>    
               jar</i> files related to the Xalan from the environment
                   variable CLASSPATH.</note></li>
</ul>             </chdesc></chrow>
</choicetable>
</step>
<step><cmd>If you need to build compiled JavaHelp, PDF output and
compiled            HTML Help, you should install some build tools
for these formats of            outputs</cmd><info>           <p>JavaHelp
is free software that can build online help for operating        
     systems, applications, and devices. If you have set up JavaHelp,
             the DITA Open Toolkit can build online Java help by invoking
             JavaHelp software. To download and install JavaHelp software,
go to              <xref format="html"
href="http://java.sun.com/products/javahelp/download_binary.html"
scope="external"></xref></p>           <p>FOP (Formatting Objects
Processor) is a Java application and is              the print formatter
driven by XSL formatting objects (XSL-FO). FOP              reads
a formatting object tree and transforms the object to PDF        
     output. If you have set up FOP, the DITA Open Toolkit can build
PDF              output by invoking FOP. To download and install the
binary              distribution for FOP, go to <xref format="html"
href="http://xml.apache.org/fop/download.html" scope="external"></xref></p> 
         <p>Microsoft HTML Help Workshop is a program designed to
create and              compile .CHM help files using HTML source
files. If you have set up              Microsoft HTML Help Workshop,
the DITA Open Toolkit can build              .CHM help files by invoking
the Workshop. To download              and install Microsoft HTML
Help Workshop, go to <xref format="html"
href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/htmlhelp/html/hwMicrosoftHTMLHelpDownloads.asp"
scope="external"></xref></p>           <p>If you have installed one
or more of these optional build tools,              you should choose
the following options to set up. </p>         </info>
<choicetable expanse="textline" frame="topbot">
<chrow><choption> If you have installed the JavaHelp,</choption><chdesc>set
up the environment variable <codeph>JHHOME</codeph> to           
    your installation directory for JavaHelp. For                example:<p><codeph>set
               JHHOME=&lt;javahelp_dir&gt;</codeph></p></chdesc></chrow>
<chrow><choption>If you have installed the FOP,</choption><chdesc> set
up your environment variable CLASSPATH to include the            
   <i>fop.jar, batik.jar</i> and <i>avalon.jar</i> files in the FOP
               directory. For example: <p><codeph>set            
   CLASSPATH=%CLASSPATH%;&lt;fop_dir&gt;\build;&lt;fop_dir&gt;\lib</codeph></p></chdesc>
</chrow>
<chrow><choption>If you want to build HTML Help output,</choption>
<chdesc>install Microsoft HTML Help Workshop to the default      
         directory.</chdesc></chrow>
</choicetable>
</step>
<step id="testdita"><cmd>Test the DITA Toolkit when you complete above
steps.</cmd><stepxmp>           <p>You can do the following steps
under the command prompt to test              whether the DITA Toolkit
and the XSLT engine are successfully              installed.</p> 
         <ul>
<li>               <b>Using the Xalan-Java/ LotusXSL-Java: </b>  
            <p>For example:<userinput>c:\pkg\DITA-OT1.0\doc>java 
                org.apache.xalan.xslt.Process -in DITA-readme.xml
-xsl                  ..\xsl\pretty.xsl -out ..\DITA-readme.xml</userinput></p> 
           </li>
<li>               <b>Using the Saxon: </b>               <p>For example:<userinput>c:\pkg\DITA-OT1.0\doc>java
                 com.icl.saxon.StyleSheet DITA-readme.xml ..\xsl\pretty.xsl
>                  ..\DITA-readme.xml </userinput></p>           
 </li>
<li>               <b>Using the Ant :</b>               <p>Run all
demo in the DITA Toolkit directory. </p>               <p>For example: <userinput>c:\pkg\DITA-OT1.0>ant
all</userinput>                  </p>               <p>Or you can
run specific file individually. </p>               <p>For example:<userinput>c:\pkg\DITA-OT1.0\ant
                 samples.web</userinput></p>               <p>   
             <note rev="r1v1" type="tip">Input <codeph>ant       
            -projecthelp</codeph> to see the list of tasks </note> 
             </p>               <note>                 <b>If you can
pass this test, it means that all of the tools                   
are installed correctly.</b>               </note>             </li>
</ul>         </stepxmp></step>
</steps>
</taskbody>
<task id="Fullsetup" xml:lang="en-us">
<title>Installing DITA OT Full Distribution</title>
<shortdesc>The software that DITA OT depend on are       redistributed.
The full distribution package of DITA OT after 1.3 includes the software,
      so the configuration process is streamlined.</shortdesc>
<taskbody>
<prereq>Before installing DITA Open Toolkit full distribution, you
need to complete the         following steps:<ul>
<li>Download and configure JDK properly.</li>
<li>(Optional) Download and configure HTMLHelp Compiler properly for
HTMLHelp             transformation. </li>
<li>(Optional) Download and configure JavaHelp Compiler properly for
JavaHelp             transformation.</li>
</ul></prereq>
<context>Then, you need to complete the following steps:</context>
<steps>
<step><cmd>Download the full DITA OT package. </cmd></step>
<step><cmd>Run the batch file "<codeph>startcmd.bat</codeph>" for
Windows           or "<codeph>startcmd.sh</codeph>" for Linux to set
up the necessary environment           variables.</cmd></step>
<step><cmd rev="r3">Run the transformation in the command-line window
by using           Java command line or ANT.</cmd></step>
</steps>
<postreq rev="r3">You can still use the standard package to install
DITA OT:<ul>
<li>Download the standard package.</li>
<li rev="r4">Configure the system environment of DITA OT, but add
two more paths %DITA_HOME%\lib;%DITA_HOME%\lib\resolver.jar;     
     to the CLASSPATH parameter.</li>
<li> Run the package by using Java command line or Ant. </li>
</ul></postreq>
</taskbody>
</task>
<task id="Linuxsetup" rev="v1r1" xml:lang="en-us">
<title>Set up DITA Toolkit in Linux</title>
<shortdesc>       <b>The following steps guide you to set up the DITA
Toolkit processing          environment in Linux.</b>     </shortdesc>
<taskbody>
<steps>
<step><cmd>Extract the package file into a Linux home directory.</cmd>
<info>             <note>You can extract all package files and toolkits
either to your                private home directory for exclusive
usage or to                <b>/usr/local/share/</b> directory for
sharing. </note>           </info></step>
<step><cmd>Set up your environment variable <codeph>JAVA_HOME</codeph>.</cmd>
<stepxmp>             <p><codeph>export JAVA_HOME=&lt;JDK_dir&gt;</codeph></p> 
         </stepxmp></step>
<step><cmd>Set up your environment variable <codeph>PATH</codeph>.</cmd>
<stepxmp>             <p><codeph>export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</codeph></p> 
         </stepxmp></step>
<step><cmd>Set up your environment variable <codeph>CLASSPATH</codeph></cmd>
<stepxmp>             <p><codeph>export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:&lt;dita_dir&gt;/lib/dost.jar</codeph></p> 
         </stepxmp></step>
<step rev="v1r1"><cmd>Set up the <b>XSLT</b> processor.</cmd>
<choicetable expanse="textline" frame="topbot">
<chrow><choption>If you use the Saxon,</choption><chdesc>        
        <ul>
<li>Set up CLASSPATH to include the <i>saxon.jar</i> file.<p rev="r1v1"><codeph>export
                     CLASSPATH=$CLASSPATH:&lt;saxon_dir>/saxon.jar</codeph></p></li>
<li>Set up ANT_OPTS. <p><codeph>export ANT_OPTS=$ANT_OPTS        
             -Djavax.xml.transform.TransformerFactory=com.icl.saxon.TransformerFactoryImpl</codeph></p><note>if
                     you don't use Saxon, please remove the <i>saxon.jar</i> 
                    file and ANT_OPTS from the environment variable.</note></li>
</ul>               </chdesc></chrow>
<chrow><choption>If you use the Xalan,</choption><chdesc>        
        <ul>
<li>Set up CLASSPATH to include the <i>xalan.jar</i> file and    
                 the <i> xercesImpl.jar</i> file. <p><codeph>export
                     CLASSPATH=$CLASSPATH:&lt;xalan_dir>/bin</codeph></p><note
type="attention">if you don't use the Xalan, please              
       remove<i> jar</i> files related to the Xalan from the     
                environment variable CLASSPATH.</note></li>
</ul>               </chdesc></chrow>
</choicetable>
</step>
<step><cmd>If you have installed build tools for compiled JavaHelp,
PDF              output and compiled HTML Help, you should choose
the following options              to set up.</cmd>
<choicetable expanse="textline" frame="topbot">
<chrow><choption> If you have installed the JavaHelp,</choption><chdesc>set
up the environment variable JHHOME to your                  installation
directory for JavaHelp. For                  example:<p><codeph>export
                 JHHOME=&lt;javahelp_dir></codeph></p></chdesc></chrow>
<chrow><choption>If you have installed the FOP,</choption><chdesc> set
up your environment variable CLASSPATH to include                
 the <i>fop.jar, batik.jar</i> and <i>avalon.jar</i> files in    
             the FOP directory. For example: <p><codeph>export   
              CLASSPATH=$CLASSPATH:&lt;fop_dir>/build:&lt;fop_dir>/lib</codeph></p></chdesc>
</chrow>
<chrow><choption>If you want to build HTML Help output,</choption>
<chdesc>install Microsoft HTML Help Workshop to the default      
           directory.</chdesc></chrow>
</choicetable>
</step>
<step><cmd>             <xref href="#installation/testdita">Test the
DITA Toolkit when you                complete above steps.</xref> 
         </cmd></step>
</steps>
</taskbody>
</task>
</task>
<?Pub *0000014666?>
