<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. --><project name="DOST" default="init" basedir=".">
  <import file="build_init.xml"></import>  
  <import file="build_preprocess.xml"></import>
        
  <path id="dost.class.path">
    
<pathelement location="${dita.dir}${file.separator}demo/fo/fo.jar"/>
    <pathelement location="${dita.dir}${file.separator}lib${file.separator}dost.jar"></pathelement>
  </path>
  
  <target name="init">
    <dita-ot-fail id="DOTA001F">
      <condition>
        <and>
          <not><equals arg1="${transtype}" arg2="troff" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsecontent" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="xhtml" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsehelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="odt" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf2" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="tocjs" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="wordrtf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="docbook" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="htmlhelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="legacypdf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="javahelp" casesensitive="false"/></not>
        </and>
      </condition>
    </dita-ot-fail>
    <condition property="transtarget" value="pdf2" else="${transtype}">
      <equals arg1="${transtype}" arg2="pdf" casesensitive="false"></equals>
    </condition>
    <antcall target="dita2${transtarget}"></antcall>
  	<condition property="clean_temp">
  	  <and>
  	    <isset property="clean.temp"></isset>
  	    <equals arg1="${clean.temp}" arg2="no" casesensitive="false"></equals>
  	  </and>
  	</condition>
  	<antcall target="clean-temp">
  	</antcall>
  </target>
  
  <target name="all">
    <echo>The &quot;ant all&quot; demonstration build has moved.
      Please try the following command instead:
      ant all -f build_demo.xml</echo>
  </target>
  
  <target name="dita-preprocess" depends="start-process, init-logger, init-URIResolver, output-version, check-arg, output-deprecated-msg, output-css-warn-message, preprocess"></target>

  <property name='dita.plugin.org.dita.troff.dir' location='${dita.dir}/plugins/org.dita.troff'/><property name='dita.plugin.org.dita.eclipsecontent.dir' location='${dita.dir}/plugins/org.dita.eclipsecontent'/><property name='dita.plugin.org.dita.eclipsehelp.dir' location='${dita.dir}/plugins/org.dita.eclipsehelp'/><property name='dita.plugin.org.dita.specialization.dita11.dir' location='${dita.dir}/demo/dita11'/><property name='dita.plugin.org.dita.xhtml.dir' location='${dita.dir}/plugins/org.dita.xhtml'/><property name='dita.plugin.org.dita.odt.dir' location='${dita.dir}/plugins/org.dita.odt'/><property name='dita.plugin.org.dita.pdf2.dir' location='${dita.dir}/demo/fo'/><property name='dita.plugin.org.kuali.kits.kms.dir' location='${dita.dir}/plugins/org.kuali.kits.kms'/><property name='dita.plugin.org.dita.specialization.dita132.dir' location='${dita.dir}/demo/dita132'/><property name='dita.plugin.com.sophos.tocjs.dir' location='${dita.dir}/demo/tocjs'/><property name='dita.plugin.org.dita.wordrtf.dir' location='${dita.dir}/plugins/org.dita.wordrtf'/><property name='dita.plugin.org.dita.docbook.dir' location='${dita.dir}/plugins/org.dita.docbook'/><property name='dita.plugin.org.dita.specialization.h2d.dir' location='${dita.dir}/demo/h2d'/><property name='dita.plugin.org.dita.specialization.eclipsemap.dir' location='${dita.dir}/demo/eclipsemap'/><property name='dita.plugin.org.dita.htmlhelp.dir' location='${dita.dir}/plugins/org.dita.htmlhelp'/><property name='dita.plugin.org.dita.base.dir' location='${dita.dir}/plugins/org.dita.base'/><property name='dita.plugin.org.dita.legacypdf.dir' location='${dita.dir}/demo/legacypdf'/><property name='dita.plugin.org.dita.pdf.dir' location='${dita.dir}/plugins/org.dita.pdf'/><property name='dita.plugin.org.dita.javahelp.dir' location='${dita.dir}/plugins/org.dita.javahelp'/>
  <!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2troff.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2eclipsecontent.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_general.xml"></import>
  
<import file="build_dita2xhtml.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2eclipsehelp.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2odt.xml"></import>

  
  <!-- test to see where the fo plugin is located, plugins or demo -->
  
<available file="${dita.dir}/plugins/fo/build.xml" property="pdf2.dir" value="plugins"></available>
  
<condition property="pdf2.dir" value="demo">
    
<not>
      
<isset property="pdf2.dir"></isset>
    </not>
  </condition>
  
  
<target name="dita2pdf2" depends="pdfswitch-warning, dita-preprocess, map2pdf2, topic2pdf2"></target> 
  
  
<condition property="pdftranstype">
    
<equals arg1="${transtype}" arg2="pdf" casesensitive="false"></equals>
  </condition>
    
  
<target name="pdfswitch-warning" if="pdftranstype">
    
<echo>/------------------------------------------\</echo>
    
<echo>| PLEASE NOTE: YOU ARE USING THE FO PLUGIN |</echo>
    
<echo>| If you want the old pdf transtype, use   |</echo>
    
<echo>| the &quot;legacypdf&quot; transtype instead.       |</echo>
    
<echo>\------------------------------------------/</echo>
  </target>
  
  
<target name="topic2pdf2" if="noMap" depends="dita-preprocess">
	
<ant dir="${dita.dir}/${pdf2.dir}/fo" target="preview.topic.pdf">
		
<property name="caller.dir" value="${basedir}"></property>
	</ant>
  </target>

  
<target name="map2pdf2" unless="noMap" depends="dita-preprocess">
  	
<dirname property="dita.temp.dir.fullpath" file="${dita.temp.dir}${file.separator}dummy.file"></dirname>
    
<pipeline message="topicmerge" module="TopicMerge" inputmap="${dita.temp.dir.fullpath}${file.separator}${user.input.file}" tempdir="${dita.temp.dir.fullpath}" extparam="output=${dita.temp.dir.fullpath}${file.separator}${dita.map.filename.root}_MERGED.xml;style=${dita.dir}/${pdf2.dir}/fo/xsl/common/topicmerge.xsl">
    </pipeline>

    
<ant dir="${dita.dir}/${pdf2.dir}/fo" target="publish.map.pdf">
        
<property name="caller.dir" value="${basedir}"></property>
    </ant>
  </target>
<!-- 
  This file is part of the DITA Open Toolkit project hosted on
  Sourceforge.net. See the accompanying license.txt file for
  applicable licenses.
  
  (C) Copyright Shawn McKenzie, 2007. All Rights Reserved.
  *-->

  
<target name="dita2tocjs" depends="dita-preprocess, map2tocjs, topic2tocjs"></target>

  
<target name="topic2tocjs" if="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      <!-- To do -->
    </antcall>
  </target>

  
<target name="map2tocjs" unless="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
    </antcall>
  </target>


  
<target name="dita.map.tocjs" description="generate merged for tocjs">
    
<xslt processor="trax" in="${input}" out="${output.file}" style="${dita.dir}/demo/tocjs/xsl/tocjs.xsl">
      
<param name="contentwin" expression="${content.frame}" if="content.frame"></param>
      
<param name="ditaext" expression="${dita.extname}"></param>
      
<param name="htmlext" expression="${out.ext}"></param>
      <!--<xmlcatalog refid="dita.catalog"/>-->
    </xslt>
  </target>

<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2wordrtf.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2docbook.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
    Sourceforge.net. See the accompanying license.txt file for 
    applicable licenses.--><!--
    | (C) Copyright IBM Corporation 2006. All Rights Reserved.
    *-->
  
  <!--property name="dita.eclipse.plugin" value="no"/-->
    
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2htmlhelp.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
    Sourceforge.net. See the accompanying license.txt file for 
    applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
        <!--<property name="transtype" value="pdf"/>
        
        <import file="build_init.xml" />
        <import file="build_preprocess.xml" />-->
        
        
<target name="dita2legacypdf" depends="build-init, preprocess, map2legacypdf, topic2legacypdf">
        </target>
        
        
<target name="topic2legacypdf" if="noMap">
            
<antcall target="dita.topic.fo">
                
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"></param>
            </antcall>
            
<antcall target="dita.fo2pdf">
                
<param name="input" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.pdf"></param>
            </antcall>
        </target>
        
        
<target name="map2legacypdf" unless="noMap">
            
<antcall target="dita.map.fo">
                
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"></param>
            </antcall>
            
<antcall target="dita.fo2pdf">
                
<param name="input" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.pdf"></param>
            </antcall>
        </target>
        
        <!-- Build XSL-FO output from ditamap -->
        
<target name="dita.map.fo" description="Build XSL-FO output from ditamap">
            
<condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2fo-shell.xsl">
                
<not>
                    
<isset property="args.xsl"></isset>
                </not>
            </condition>
            
<dirname file="${dita.temp.dir}${file.separator}${user.input.file}" property="dita.merged.dir"></dirname>
            
<xslt processor="trax" in="${input}" out="${dita.merged.dir}${file.separator}${dita.map.filename.root}_MERGED.xml" style="${dita.script.dir}${file.separator}topicmerge.xsl">
                <!--<xmlcatalog refid="dita.catalog" />-->
            </xslt>
            
<xslt processor="trax" in="${dita.merged.dir}${file.separator}${dita.map.filename.root}_MERGED.xml" out="${output}" style="${args.xsl}">
                <!--<xmlcatalog refid="dita.catalog" />-->
                
<param name="output-related-links" expression="${args.fo.output.rel.links}" if="args.fo.output.rel.links"></param>
                
<param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
                
<param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
                
<param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
                
<param name="dflt-ext" expression="${fo.img.ext}" if="fo.img.ext"></param>
            </xslt>
        </target>
        
        <!-- Build PDF from FO using FOP, need to include FOP, Avalon, 
            and Batik relevant jar files in CLASSPATH -->
        
<target name="dita.fo2pdf" if="hasFOP" description="Build PDF from FO using FOP">
            
<property name="fop.home" value="${dita.dir}/demo/legacypdf"></property>
            
<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
                
<classpath>
                    
<fileset dir="${fop.home}/lib">
                        
<include name="*.jar"></include>
                    </fileset>
                    
<fileset dir="${dita.dir}/lib">
                        
<include name="*.jar"></include>
                    </fileset>
                </classpath>
            </taskdef>
            
<antcall target="dita.fo2pdf.userconfig"></antcall>
            
<antcall target="dita.fo2pdf.nouserconfig"></antcall>
        </target>
        
        
<target name="dita.fo2pdf.userconfig" if="args.fo.userconfig">
            
<fop format="application/pdf" basedir="${input}" fofile="${input}" outfile="${output}" messagelevel="info" userconfig="${args.fo.userconfig}">
            </fop>
        </target>
        
        
<target name="dita.fo2pdf.nouserconfig" unless="args.fo.userconfig">
            
<fop format="application/pdf" basedir="${input}" fofile="${input}" outfile="${output}" messagelevel="info">
            </fop>
        </target>
        
        <!-- Build XSL-FO output from dita topic -->
        
<target name="dita.topic.fo" description="Build XSL-FO output from dita topic">
            
<condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2fo-shell.xsl">
                
<not>
                    
<isset property="args.xsl"></isset>
                </not>
            </condition>
            
<xslt processor="trax" in="${input}" out="${output}" style="${args.xsl}">
                <!--<xmlcatalog refid="dita.catalog" />-->
                
<param name="output-related-links" expression="${args.fo.output.rel.links}" if="args.fo.output.rel.links"></param>
                
<param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
                
<param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
                
<param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
                
<param name="dflt-ext" expression="${fo.img.ext}" if="fo.img.ext"></param>
            </xslt>
        </target>
        
    <!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2pdf.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2javahelp.xml"></import>

  
</project>